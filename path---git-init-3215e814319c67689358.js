webpackJsonp([0xaee64f146a2d],{793:function(e,o){e.exports={data:{post:{id:"/mnt/d/Works/blogs/blog/content/posts/2018-07-30--git-init/index.md absPath of file >>> MarkdownRemark",html:'<h2>Por que Git?</h2>\n<p>Talvez seja uma pergunta fácil e óbvia para muitas pessoas, mas para outras, vejo que fica muito difícil de entender o motivo de se usar Git. Está começando aqui, uma série de posts sobre o famoso Git.</p>\n<p> <em>“Git é um sistema de controle de versão de arquivos. Através deles podemos desenvolver projetos na qual diversas pessoas podem contribuir simultaneamente no mesmo, editando e criando novos arquivos e permitindo que os mesmos possam existir sem o risco de suas alterações serem sobrescritas”</em>\n<a href="https://tableless.com.br/tudo-que-voce-queria-saber-sobre-git-e-github-mas-tinha-vergonha-de-perguntar/">Tableless</a></p>\n<h3>git clone &#x3C; LINK></h3>\n<p>Comando para baixar o repositório do git</p>\n<blockquote>\n<p><code class="language-text">git clone git@github.com:bruno-alencar/talk-git-init.git</code></p>\n</blockquote>\n<h3>git remote add &#x3C; NOME > &#x3C; LINK ></h3>\n<p>Quando estamos referenciando uma origem de código de um projecto já existente na máquina</p>\n<blockquote>\n<p><code class="language-text">git remote add origin git@github.com:bruno-alencar/talk-git-init.git</code></p>\n</blockquote>\n<h2>Branches</h2>\n<p>Para exemplificar o que seriam branches, imagine um tronco de uma árvore, a parte principal seria a produção (mais conhecida como ‘master’). Se tivesse um site no ar, seria nesse lugar que guardaria o código do seu site que seria de produção.</p>\n<p>Mas imagine que você precisa colocar um novo layout no seu site, mas não quer mostrar ainda porque ainda está construindo. Seriam os galhos, ramos desta árvore.</p>\n<p>Toda nova modificação será criado uma branch, correspondente aquela feature (funcionalidade)</p>\n<h2>Visibilidade no mercado</h2>\n<p>Durante meu tempo de faculdade não percebi o quanto um github bem construído é importante. E o pior ainda, não percebi que o melhor lugar para se procurar código, é lá.</p>\n<p>Visto algum tempo, pessoas que codam a pouco tempo ou até a alguns anos, não entenderam que esse montante de código livre ajuda muito a aprender coisas novas. Pensando da forma:\n“Se eu estou fazendo isso, alguém no mundo já fez algo parecido”\nMas não se engane, se estiver procurando algo muito novo, talvez não ache exatamente o que precisa, mas sim, algo que te dê uma “luz”.</p>\n<p>Com isso, um bom Git Hub, com vários códigos seus, presença em projetos opensources, podem mostrar muito sobre o que você sabe e o que gosta.</p>\n<h2>Comandos básicos (essenciais)</h2>\n<p>Selecionei os comandos básicos do Git, para oferecer rapidamente a experiência de uso do Git. </p>\n<p>O primeiro comando para iniciar um projeto no Git, é o Git init.\nGit init vai colocar todas para chamar aquele seu projeto de “projeto Git”, e sem ele, nenhum dos outros comandos irá funcionar. Ele é feito uma única vez no projeto e não será mais necessário fazê-lo.</p>\n<h3>git init</h3>\n<p>Comando utilizado para iniciar um projeto git</p>\n<blockquote>\n<p><code class="language-text">git init</code></p>\n</blockquote>\n<p>Git add (nome do arquivo) adiciona o arquivo especifico para commitar. Desta forma, você consegue separar arquivos de modificação para realizar diferentes registros. Caso queira adicionar todos, basta colocar um ’*’ no final. Git add *</p>\n<h3>git add &#x3C; ARQUIVO ></h3>\n<p>Podemos adicionar nossos arquivos a serem comitados separadamente ou não</p>\n<blockquote>\n<p><code class="language-text">git add README.md</code></p>\n</blockquote>\n<p>Git pull pega todos os arquivos modificados que estão no repositório (já foram publicados) para a sua máquina.</p>\n<p>Git push\nFinal o comando, o comando que pega todos os seus commits e sobem para nuvem, seu repositório. Nunca se esqueça deste comando, ele que deixará outras pessoas verem seu código.\nGit remote add origin http..\nPrecisamos sempre adicionar o que chamamos de origem. Nosso repositório é uma origem, mas como sabemos que o código na nossa máquina é de lá?\nCom este comando, linkamos o repositório da máquina, com o da nuvem, podemos fazer o push tranquilamente.</p>\n<h2>Comandos que começam a dar problemas</h2>\n<p>Como nada é perfeito, seu projeto também pode não ser kkkk. Quando todos do projeto trabalham em suas branches, com os comando acima tudo funcionará perfeitamente. Mas tem o momento em que tudo precisa ser “juntado”\nGit Merge\nAgora começa a brincadeira, se alguém mexeu no mesmo arquivo e no mesmo pedaço de código que o seu, ocorrerá os “CONFLICTS”. O git consegue resolver boa parte deles, mas alguns, será necessário definir o que fica e o que sai do projeto.</p>\n<p>Git pull de outra branch</p>\n<p>Resolvendo conflitos (formas) - Deu merda\nSe tornando master com gitflow (padronizando seu projeto)</p>',htmlAst:{type:"root",children:[{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Por que Git?"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Talvez seja uma pergunta fácil e óbvia para muitas pessoas, mas para outras, vejo que fica muito difícil de entender o motivo de se usar Git. Está começando aqui, uma série de posts sobre o famoso Git."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:" "},{type:"element",tagName:"em",properties:{},children:[{type:"text",value:"“Git é um sistema de controle de versão de arquivos. Através deles podemos desenvolver projetos na qual diversas pessoas podem contribuir simultaneamente no mesmo, editando e criando novos arquivos e permitindo que os mesmos possam existir sem o risco de suas alterações serem sobrescritas”"}]},{type:"text",value:"\n"},{type:"element",tagName:"a",properties:{href:"https://tableless.com.br/tudo-que-voce-queria-saber-sobre-git-e-github-mas-tinha-vergonha-de-perguntar/"},children:[{type:"text",value:"Tableless"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"git clone < LINK>"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Comando para baixar o repositório do git"}]},{type:"text",value:"\n"},{type:"element",tagName:"blockquote",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"git clone git@github.com:bruno-alencar/talk-git-init.git"}]}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"git remote add < NOME > < LINK >"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Quando estamos referenciando uma origem de código de um projecto já existente na máquina"}]},{type:"text",value:"\n"},{type:"element",tagName:"blockquote",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"git remote add origin git@github.com:bruno-alencar/talk-git-init.git"}]}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Branches"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Para exemplificar o que seriam branches, imagine um tronco de uma árvore, a parte principal seria a produção (mais conhecida como ‘master’). Se tivesse um site no ar, seria nesse lugar que guardaria o código do seu site que seria de produção."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Mas imagine que você precisa colocar um novo layout no seu site, mas não quer mostrar ainda porque ainda está construindo. Seriam os galhos, ramos desta árvore."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Toda nova modificação será criado uma branch, correspondente aquela feature (funcionalidade)"}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Visibilidade no mercado"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Durante meu tempo de faculdade não percebi o quanto um github bem construído é importante. E o pior ainda, não percebi que o melhor lugar para se procurar código, é lá."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Visto algum tempo, pessoas que codam a pouco tempo ou até a alguns anos, não entenderam que esse montante de código livre ajuda muito a aprender coisas novas. Pensando da forma:\n“Se eu estou fazendo isso, alguém no mundo já fez algo parecido”\nMas não se engane, se estiver procurando algo muito novo, talvez não ache exatamente o que precisa, mas sim, algo que te dê uma “luz”."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Com isso, um bom Git Hub, com vários códigos seus, presença em projetos opensources, podem mostrar muito sobre o que você sabe e o que gosta."}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Comandos básicos (essenciais)"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Selecionei os comandos básicos do Git, para oferecer rapidamente a experiência de uso do Git. "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"O primeiro comando para iniciar um projeto no Git, é o Git init.\nGit init vai colocar todas para chamar aquele seu projeto de “projeto Git”, e sem ele, nenhum dos outros comandos irá funcionar. Ele é feito uma única vez no projeto e não será mais necessário fazê-lo."}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"git init"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Comando utilizado para iniciar um projeto git"}]},{type:"text",value:"\n"},{type:"element",tagName:"blockquote",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"git init"}]}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Git add (nome do arquivo) adiciona o arquivo especifico para commitar. Desta forma, você consegue separar arquivos de modificação para realizar diferentes registros. Caso queira adicionar todos, basta colocar um ’*’ no final. Git add *"}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"git add < ARQUIVO >"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Podemos adicionar nossos arquivos a serem comitados separadamente ou não"}]},{type:"text",value:"\n"},{type:"element",tagName:"blockquote",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"git add README.md"}]}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Git pull pega todos os arquivos modificados que estão no repositório (já foram publicados) para a sua máquina."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Git push\nFinal o comando, o comando que pega todos os seus commits e sobem para nuvem, seu repositório. Nunca se esqueça deste comando, ele que deixará outras pessoas verem seu código.\nGit remote add origin http..\nPrecisamos sempre adicionar o que chamamos de origem. Nosso repositório é uma origem, mas como sabemos que o código na nossa máquina é de lá?\nCom este comando, linkamos o repositório da máquina, com o da nuvem, podemos fazer o push tranquilamente."}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Comandos que começam a dar problemas"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Como nada é perfeito, seu projeto também pode não ser kkkk. Quando todos do projeto trabalham em suas branches, com os comando acima tudo funcionará perfeitamente. Mas tem o momento em que tudo precisa ser “juntado”\nGit Merge\nAgora começa a brincadeira, se alguém mexeu no mesmo arquivo e no mesmo pedaço de código que o seu, ocorrerá os “CONFLICTS”. O git consegue resolver boa parte deles, mas alguns, será necessário definir o que fica e o que sai do projeto."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Git pull de outra branch"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Resolvendo conflitos (formas) - Deu merda\nSe tornando master com gitflow (padronizando seu projeto)"}]}],data:{quirksMode:!1}},fields:{slug:"/git-init/",prefix:"2018-07-30"},frontmatter:{title:">Git init",subTitle:"How to getting started on github",cover:{childImageSharp:{resize:{src:"/blog/static/photo-1463852247062-1bbca38f7805-cover-e7a129318b43a8a58bbc8fe8219cda1d-ada8c.jpg"}}}}},author:{id:"/mnt/d/Works/blogs/blog/content/parts/author.md absPath of file >>> MarkdownRemark",html:'<p><strong>Bruno Alencar</strong> Software Developer at <a href="http://nfe.io">NFe.io</a> :hearts:</p>'},footnote:{id:"/mnt/d/Works/blogs/blog/content/parts/footnote.md absPath of file >>> MarkdownRemark",html:'<ul>\n<li>this is a demo site of the <a href="https://github.com/greglobinski/gatsby-starter-personal-blog">gatsby-starter-personal-blog</a></li>\n<li>built by <a href="https://www.greglobinski.com">greg lobinski</a></li>\n<li>GatsbyJS, ReactJs, CSS in JS - <a href="https://dev.greglobinski.com">Front-end web development with Greg</a></li>\n<li>deliverd by <a href="https://www.netlify.com/">Netlify</a></li>\n<li>photos by <a href="https://unsplash.com">unsplash.com</a></li>\n</ul>'},site:{siteMetadata:{facebook:{appId:""}}}},pathContext:{slug:"/git-init/"}}}});
//# sourceMappingURL=path---git-init-3215e814319c67689358.js.map